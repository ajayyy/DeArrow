{"version":3,"file":"background.js","mappings":"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","sources":["webpack:///./maze-utils/src/background-request-proxy.ts","webpack:///./maze-utils/src/browserApi.ts","webpack:///./maze-utils/src/cleanup.ts","webpack:///./maze-utils/src/config.ts","webpack:///./maze-utils/src/formating.ts","webpack:///./maze-utils/src/hash.ts","webpack:///./maze-utils/src/index.ts","webpack:///./maze-utils/src/setup.ts","webpack:///./maze-utils/src/tab-updates.ts","webpack:///./src/background.ts","webpack:///./src/config/config.ts","webpack:///./src/license/license.ts","webpack:///./src/submission/casualVote.const.ts","webpack:///./src/utils/logger.ts","webpack:///./src/utils/requests.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["import { isFirefoxOrSafari, objectToURI } from \".\";\nimport { isSafari } from \"./config\";\nimport { isBodyGarbage } from \"./formating\";\nimport { getHash } from \"./hash\";\n\nexport interface FetchResponse {\n    responseText: string;\n    headers: Record<string, string> | null;\n    status: number;\n    ok: boolean;\n}\n\nexport interface FetchResponseBinary {\n    responseBinary: Blob | number[];\n    headers: Record<string, string> | null;\n    status: number;\n    ok: boolean;\n}\n\n/**\n * Sends a request to the specified url\n *\n * @param type The request type \"GET\", \"POST\", etc.\n * @param address The address to add to the SponsorBlock server address\n * @param callback\n */\nexport async function sendRealRequestToCustomServer(type: string, url: string,\n        data: Record<string, unknown> | null = {}, headers: Record<string, unknown> = {}) {\n    // If GET, convert JSON to parameters\n    if (type.toLowerCase() === \"get\") {\n        url = objectToURI(url, data, true);\n\n        data = null;\n    }\n\n    const response = await fetch(url, {\n        method: type,\n        headers: {\n            'Content-Type': 'application/json',\n            ...(headers || {})\n        },\n        redirect: 'follow',\n        body: data ? JSON.stringify(data) : null\n    });\n\n    return response;\n}\n\n/**\n * Checks whether the value is safe to send using .postMessage()\n *\n * @param value The value to check\n * @returns true if the value is serializable, false otherwise\n */\nexport function isSerializable(value: unknown): boolean {\n    try {\n        window.structuredClone(value);\n        return true;\n    } catch {\n        return false;\n    }\n}\n\ninterface MaybeError {\n    toString?: () => string,\n}\n\n/**\n * Ensures the value is serializable by converting to a string if it's not\n *\n * Useful for sending errors cause you never really know what \"error\" you may get with JS\n *\n * @param value The value to check\n * @returns Unmodified value if serializable, stringified version otherwise\n */\nexport function serializeOrStringify<T>(value: T & MaybeError): T | string {\n    return isSerializable(value)\n        ? value\n        : (\n            \"toString\" in value && typeof value.toString === 'function'\n            ? value.toString()\n            : String(value)\n        );\n}\n\nexport function setupBackgroundRequestProxy() {\n    chrome.runtime.onMessage.addListener((request, sender, callback) => {\n        if (request.message === \"sendRequest\") {\n            sendRealRequestToCustomServer(request.type, request.url, request.data, request.headers).then(async (response) => {\n                const buffer = request.binary \n                    ? ((isFirefoxOrSafari() && !isSafari())\n                        ? await response.blob()\n                        : Array.from(new Uint8Array(await response.arrayBuffer())))\n                    : null;\n\n                callback({\n                    responseText: !request.binary ? await response.text() : \"\",\n                    responseBinary: buffer,\n                    headers: (request.returnHeaders && response.headers)\n                            ? [...response.headers.entries()].reduce((acc, [key, value]) => {\n                                acc[key] = value;\n                                return acc;\n                            }\n                        , {})\n                        : null,\n                    status: response.status,\n                    ok: response.ok\n                });\n            }).catch(error => {\n                console.error(\"Proxied request failed:\", error)\n                callback({\n                    error: serializeOrStringify(error),\n                });\n            });\n\n            return true;\n        }\n\n        if (request.message === \"getHash\") {\n            getHash(request.value, request.times).then(callback).catch((e) => {\n                console.error(\"Hash request failed:\", e)\n                callback({\n                    error: serializeOrStringify(e),\n                });\n            });\n\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport function sendRequestToCustomServer(type: string, url: string, data = {}, headers = {}): Promise<FetchResponse> {\n    return new Promise((resolve, reject) => {\n        // Ask the background script to do the work\n        chrome.runtime.sendMessage({\n            message: \"sendRequest\",\n            type,\n            url,\n            data,\n            headers\n        }, (response) => {\n            if (\"error\" in response) {\n                reject(response.error);\n            } else {\n                resolve(response);\n            }\n        });\n    });\n}\n\nexport function sendBinaryRequestToCustomServer(type: string, url: string, data = {}, headers = {}): Promise<FetchResponseBinary> {\n    return new Promise((resolve, reject) => {\n        // Ask the background script to do the work\n        chrome.runtime.sendMessage({\n            message: \"sendRequest\",\n            type,\n            url,\n            data,\n            headers,\n            binary: true,\n            returnHeaders: true\n        }, (response) => {\n            if (\"error\" in response) {\n                reject(response.error);\n            } else {\n                resolve(response);\n            }\n        });\n    });\n}\n\n/**\n * Formats and `console.warn`s the given request\n *\n * Use this to log failed requests.\n *\n * @param request The request to log\n * @param prefix Extension prefix, such as \"SB\" or \"CB\". Brackets will be added automatically\n * @param requestDescription A string describing what the failed request was, such as \"segment skip log\", which would produce \"Server responded ... to a segment skip log request\"\n */\nexport function logRequest(request: FetchResponse | FetchResponseBinary, prefix: string, requestDescription: string) {\n    const body = (\"responseText\" in request && !isBodyGarbage(request.responseText)) ? `: ${request.responseText}` : \"\"\n    console.warn(`[${prefix}] Server responded with code ${request.status} to a ${requestDescription} request${body}`);\n}\n","export const chromeP = typeof(browser) === \"undefined\" ? (typeof(chrome) !== \"undefined\" ? chrome : null as unknown as typeof chrome) : browser;","import { chromeP } from \"./browserApi\";\n\nconst cleanupListeners: (() => void)[] = [];\nexport function addCleanupListener(listener: () => void) {\n    cleanupListeners.push(listener);\n}\n\nexport function setupCleanupListener() {\n    const source = getCleanupId();\n\n    const started = performance.now();\n    window.postMessage({\n        source,\n        message: getCleanupStartMessage()\n    });\n\n    window.addEventListener(\"message\", (message) => {\n        if (message.data?.source \n                && message.data.source === source\n                && message.data.message === getCleanupStartMessage()\n                && performance.now() - started > 5000) {\n\n            for (const listener of cleanupListeners) {\n                listener();\n            }\n        }\n    });\n}\n\nexport function getCleanupId() {\n    return `${chrome.runtime.id}-cleanup`;\n}\n\nexport function getCleanupStartMessage() {\n    return \"cleanup-start\"\n}\n\nexport interface InjectedScript {\n    matches?: string[];\n    js?: string[];\n    css?: string[];\n}\n\nexport async function injectUpdatedScripts(extraScripts: InjectedScript[] = [], ignoreNormalScipts = false) {\n    const scripts = ignoreNormalScipts ? extraScripts : extraScripts.concat(chrome.runtime.getManifest().content_scripts || []);\n    if (\"scripting\" in chrome) {\n        for (const cs of scripts) {\n            for (const tab of await chromeP.tabs.query({url: cs.matches})) {\n                if (cs.css && cs.css.length > 0) {\n                    await chromeP.scripting.insertCSS({\n                        target: {tabId: tab.id!},\n                        files: cs.css || [],\n                    })\n                }\n    \n                await chromeP.scripting.executeScript({\n                    target: {tabId: tab.id!},\n                    files: cs.js || [],\n                    \n                    world: cs[\"world\"] || \"ISOLATED\"\n                })\n            }\n        }\n    } else {\n        chrome.windows.getAll({\n            populate: true\n        }, (windows) => {\n            for (const window of windows) {\n                if (window.tabs) {\n                    for (const tab of window.tabs) {\n                        for (const script of scripts) {\n                            if (tab.url && script.matches?.some?.((match) => \n                                    tab.url!.match(match\n                                            .replace(/\\//g, \"\\\\/\")\n                                            .replace(/\\./g, \"\\\\.\")\n                                            .replace(/\\*/g, \".*\")))) {\n                                if (script.js) {\n                                    for (const file of script.js) {\n                                        void chrome.tabs.executeScript(tab.id!, {\n                                            file\n                                        });\n                                    }\n                                }\n    \n                                if (script.css) {\n                                    for (const file of script.css) {\n                                        void chrome.tabs.insertCSS(tab.id!, {\n                                            file\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        });\n    }\n}","import { isFirefoxOrSafari } from \".\";\n\nexport interface SyncStorage {\n    invidiousInstances: string[];\n}\n\nexport interface LocalStorage {\n    navigationApiAvailable: boolean;\n}\n\ninterface StorageObjects<T, U> {\n    sync: T;\n    local: U;\n}\n\nexport type StorageChangesObject = { [key: string]: chrome.storage.StorageChange };\n\nexport type Keybind = {\n    key: string | null;\n    code?: string | null;\n    ctrl?: boolean | null;\n    alt?: boolean | null;\n    shift?: boolean | null;\n}\n\nexport class ProtoConfig<T extends SyncStorage, U extends LocalStorage> {\n    configLocalListeners: Array<(changes: StorageChangesObject) => unknown> = [];\n    configSyncListeners: Array<(changes: StorageChangesObject) => unknown> = [];\n    syncDefaults: T;\n    localDefaults: U;\n    cachedSyncConfig: T | null = null;\n    cachedLocalStorage: U | null = null;\n    config: T | null = null;\n    local: U | null = null;\n    inDeArrow = false;\n\n    constructor (syncDefaults: T, localDefaults: U,\n            migrateOldSyncFormats: (config: T) => void, inDeArrow = false) {\n        this.syncDefaults = syncDefaults;\n        this.localDefaults = localDefaults;\n        this.inDeArrow = inDeArrow;\n\n        void this.setupConfig(migrateOldSyncFormats).then((result) => {\n            this.config = result?.sync;\n            this.local = result?.local;\n        });\n    }\n\n    configProxy(): StorageObjects<T, U> {\n        chrome.storage.onChanged.addListener((changes: {[key: string]: chrome.storage.StorageChange}, areaName) => {\n            if (areaName === \"sync\") {\n                for (const key in changes) {\n                    this.cachedSyncConfig![key] = changes[key].newValue;\n                }\n    \n                for (const callback of this.configSyncListeners) {\n                    callback(changes);\n                }\n            } else if (areaName === \"local\") {\n                for (const key in changes) {\n                    this.cachedLocalStorage![key] = changes[key].newValue;\n                }\n    \n                for (const callback of this.configLocalListeners) {\n                    callback(changes);\n                }\n            }\n        });\n\n        let lastSet = 0;\n        const nextToUpdate: Set<string> = new Set();\n        let activeTimeout: NodeJS.Timeout | null = null;\n\n        const self = this;\n        const syncHandler: ProxyHandler<SyncStorage> = {\n            set<K extends keyof SyncStorage>(obj: SyncStorage, prop: K, value: SyncStorage[K]) {\n                self.cachedSyncConfig![prop] = value;\n\n                if (Date.now() - lastSet < 100) {\n                    nextToUpdate.add(prop);\n                    if (!activeTimeout) {\n                        const delayUpdate = () => {\n                            const items = [...nextToUpdate];\n                            nextToUpdate.clear();\n\n                            void chrome.storage.sync.set(items.map((v) => [v, self.cachedSyncConfig![v]]).reduce((acc, [k, v]) => {\n                                acc[k] = v;\n                                return acc;\n                            }, {}));\n\n                            activeTimeout = null;\n                        }\n\n                        activeTimeout = setTimeout(delayUpdate, 20);\n                    }\n\n                    return true;\n                }\n    \n                void chrome.storage.sync.set({\n                    [prop]: value\n                });\n\n                lastSet = Date.now();\n    \n                return true;\n            },\n    \n            get<K extends keyof SyncStorage>(obj: SyncStorage, prop: K): SyncStorage[K] {\n                const data = self.cachedSyncConfig![prop];\n    \n                return obj[prop] || data;\n            },\n    \n            deleteProperty(obj: SyncStorage, prop: keyof SyncStorage) {\n                void chrome.storage.sync.remove(<string> prop);\n    \n                return true;\n            }\n    \n        };\n    \n        const localHandler: ProxyHandler<LocalStorage> = {\n            set<K extends keyof LocalStorage>(obj: LocalStorage, prop: K, value: LocalStorage[K]) {\n                self.cachedLocalStorage![prop] = value;\n    \n                void chrome.storage.local.set({\n                    [prop]: value\n                });\n    \n                return true;\n            },\n    \n            get<K extends keyof LocalStorage>(obj: LocalStorage, prop: K): LocalStorage[K] {\n                const data = self.cachedLocalStorage![prop];\n    \n                return obj[prop] || data;\n            },\n    \n            deleteProperty(obj: LocalStorage, prop: keyof LocalStorage) {\n                void chrome.storage.local.remove(<string> prop);\n    \n                return true;\n            }\n    \n        };\n    \n        return {\n            sync: new Proxy<T>({ handler: syncHandler } as unknown as T, syncHandler),\n            local: new Proxy<U>({ handler: localHandler } as unknown as U, localHandler)\n        };\n    }\n    \n    forceSyncUpdate(prop: string): void {\n        const value = this.cachedSyncConfig![prop];\n        void chrome.storage.sync.set({\n            [prop]: value\n        });\n    }\n    \n    forceLocalUpdate(prop: string): void {\n        const value = this.cachedLocalStorage![prop];\n\n        void chrome.storage.local.set({\n            [prop]: value\n        }, () => {\n            const error = chrome.runtime.lastError;\n            if (error && prop !== \"navigationApiAvailable\") {\n                alert(`SponsorBlock/DeArrow: ${chrome.i18n.getMessage(\"storageFull\")}\\n\\n${error}`);\n            }\n        });\n    }\n    \n    async fetchConfig(): Promise<void> {\n        await Promise.all([new Promise<void>((resolve) => {\n            chrome.storage.sync.get(null, (items) => {\n                this.cachedSyncConfig = <T> <unknown> items;\n\n                if (this.cachedSyncConfig === undefined) {\n                    this.cachedSyncConfig = {} as T;\n\n                    if (this.inDeArrow \n                            || window.location.href.includes(\"options.html\")) {\n                        alert(`${chrome.i18n.getMessage(\"syncDisabledWarning\")}${\n                            this.inDeArrow ? `\\n\\n${chrome.i18n.getMessage(\"syncDisabledWarningDeArrow\")}` : ``}${\n                            isFirefoxOrSafari() && !isSafari() ? `\\n\\n${chrome.i18n.getMessage(\"syncDisabledFirefoxSuggestions\")}` : ``}`);\n                    }\n                }\n\n                resolve();\n            });\n        }), new Promise<void>((resolve) => {\n            chrome.storage.local.get(null, (items) => {\n                this.cachedLocalStorage = <U> <unknown> (items ?? {});\n                resolve();\n            });\n        })]);\n    }\n    \n    async setupConfig(migrateOldSyncFormats: (config: T) => void): Promise<StorageObjects<T, U>> {\n        if (typeof(chrome) === \"undefined\") return null as unknown as StorageObjects<T, U>;\n    \n        await this.fetchConfig();\n        this.addDefaults();\n        const result = this.configProxy();\n        migrateOldSyncFormats(result.sync);\n    \n        return result;\n    }\n    \n    // Add defaults\n    addDefaults() {\n        for (const key in this.syncDefaults) {\n            if(!Object.prototype.hasOwnProperty.call(this.cachedSyncConfig, key)) {\n                this.cachedSyncConfig![key] = this.syncDefaults[key];\n            } else if (key === \"barTypes\") {\n                for (const key2 in this.syncDefaults[key]) {\n                    if(!Object.prototype.hasOwnProperty.call(this.cachedSyncConfig![key], key2)) {\n                        this.cachedSyncConfig![key][key2] = this.syncDefaults[key][key2];\n                    }\n                }\n            }\n        }\n    \n        for (const key in this.localDefaults) {\n            if(!Object.prototype.hasOwnProperty.call(this.cachedLocalStorage, key)) {\n                this.cachedLocalStorage![key] = this.localDefaults[key];\n            }\n        }\n    }\n\n    isReady(): boolean {\n        return this.config !== null;\n    }\n}\n\nexport function isSafari(): boolean {\n    return typeof(navigator) !== \"undefined\" && navigator.vendor === \"Apple Computer, Inc.\";\n}\n\nexport function keybindEquals(first: Keybind, second: Keybind): boolean {\n    if (first == null || second == null ||\n            Boolean(first.alt) != Boolean(second.alt) || Boolean(first.ctrl) != Boolean(second.ctrl) || Boolean(first.shift) != Boolean(second.shift) ||\n            first.key == null && first.code == null || second.key == null && second.code == null)\n        return false;\n    if (first.code != null && second.code != null)\n        return first.code === second.code;\n    if (first.key != null && second.key != null)\n        return first.key.toUpperCase() === second.key.toUpperCase();\n    return false;\n}\n\nexport function formatKey(key: string): string {\n    if (key == null)\n        return \"\";\n    else if (key == \" \")\n        return \"Space\";\n    else if (key.length == 1)\n        return key.toUpperCase();\n    else\n        return key;\n}\n\nexport function keybindToString(keybind: Keybind): string {\n    if (keybind == null || keybind.key == null)\n        return \"\";\n\n    let ret = \"\";\n    if (keybind.ctrl)\n        ret += \"Ctrl + \";\n    if (keybind.alt)\n        ret += \"Alt + \";\n    if (keybind.shift)\n        ret += \"Shift + \";\n\n    return ret += formatKey(keybind.key);\n}","export function getFormattedTimeToSeconds(formatted: string): number | null {\n    const fragments = /^(?:(?:(\\d+):)?(\\d+):)?(\\d*(?:[.,]\\d+)?)$/.exec(formatted);\n\n    if (fragments === null) {\n        return null;\n    }\n\n    const hours = fragments[1] ? parseInt(fragments[1]) : 0;\n    const minutes = fragments[2] ? parseInt(fragments[2] || '0') : 0;\n    const seconds = fragments[3] ? parseFloat(fragments[3].replace(',', '.')) : 0;\n\n    return hours * 3600 + minutes * 60 + seconds;\n}\n\nexport function getFormattedTime(seconds: number, precise?: boolean): string | null {\n    seconds = Math.max(seconds, 0);\n    \n    const hours = Math.floor(seconds / 60 / 60);\n    const minutes = Math.floor(seconds / 60) % 60;\n    let minutesDisplay = String(minutes);\n    let secondsNum = seconds % 60;\n    if (!precise) {\n        secondsNum = Math.floor(secondsNum);\n    }\n\n    let secondsDisplay = String(precise ? secondsNum.toFixed(3) : secondsNum);\n    \n    if (secondsNum < 10) {\n        //add a zero\n        secondsDisplay = \"0\" + secondsDisplay;\n    }\n    if (hours && minutes < 10) {\n        //add a zero\n        minutesDisplay = \"0\" + minutesDisplay;\n    }\n    if (isNaN(hours) || isNaN(minutes)) {\n        return null;\n    }\n\n    const formatted = (hours ? hours + \":\" : \"\") + minutesDisplay + \":\" + secondsDisplay;\n\n    return formatted;\n}\n\n/**\n * Gets the error message in a nice string\n *\n * The result should be a single line string, suitable for small display spaces.\n * \n * @param {int} statusCode \n * @returns {string} errorMessage\n */\nexport function getShortErrorMessage(statusCode: number, responseText: string): string {\n    // timeout\n    if (statusCode === 0) {\n        return chrome.i18n.getMessage(\"0\");\n    }\n    // prep the strings\n    const errorMessage = (\n        (responseText\n            && !(responseText.includes(`cf-wrapper`) || responseText.includes(\"<!DOCTYPE html>\"))\n            && responseText.length < 64 // this value is very much arbitrary\n        )\n            ? ` ${responseText}`\n            : \"\"\n    );\n    // use the 502 string for 503s\n    let introString = chrome.i18n.getMessage(`${statusCode === 503 ? 502 : statusCode}`);\n    if (introString === \"\") {\n        introString = chrome.i18n.getMessage(\"connectionError\");\n    }\n    const errorCodeString = chrome.i18n.getMessage(\"errorCode\").replace(\"{code}\", `${statusCode}${errorMessage}`);\n    return `${introString} ${errorCodeString}`;\n}\n\n/**\n * Checks if the body is worth displaying to the user/logs\n *\n * @param body the body\n * @returns true if the body should be considered \"garbage\", false if it's potentially valuable\n */\nexport function isBodyGarbage(body: string): boolean {\n    return body.includes(`cf-wrapper`) || body.includes(\"<!DOCTYPE html>\");\n}\n\n/**\n * Gets the error message in a nice string\n * \n * The result will be a longer, multiline string, suitable for long-lived error notices or alerts.\n *\n * @param {int} statusCode \n * @returns {string} errorMessage\n */\nexport function getLongErrorMessage(statusCode: number, responseText: string): string {\n    // timeout\n    if (statusCode === 0) {\n        return chrome.i18n.getMessage(\"0\");\n    }\n    // prep the strings\n    const postFix = (responseText && !isBodyGarbage(responseText)) ? \"\\n\\n\" + responseText : \"\";\n    // use the 502 string for 503s\n    let introString = chrome.i18n.getMessage(`${statusCode === 503 ? 502 : statusCode}`);\n    if (introString === \"\") {\n        introString = chrome.i18n.getMessage(\"connectionError\");\n    }\n    const errorCodeString = chrome.i18n.getMessage(\"errorCode\").replace(\"{code}\", `${statusCode}`);\n    const reminder = (statusCode === 502 || statusCode === 503) ? `\\n\\n${chrome.i18n.getMessage(\"statusReminder\")}` : \"\";\n    return `${introString} ${errorCodeString}${postFix}${reminder}`;\n}\n\n/**\n * Formats the JS error message in a nice string\n * \n * @param error The error to format\n * @returns {string} The nice string\n */\nexport function formatJSErrorMessage(error: string | Error): string {\n    const introString =  chrome.i18n.getMessage(\"connectionError\");\n    return `${introString} ${error}`\n}\n","export type HashedValue = string & { __hashBrand: unknown };\n\nexport async function getHash<T extends string>(value: T, times = 5000): Promise<T & HashedValue> {\n    if (times <= 0) return \"\" as T & HashedValue;\n\n    if (!(\"subtle\" in crypto)) {\n        // Run in background script instead\n        return new Promise((resolve, reject) => chrome.runtime.sendMessage({\n            message: \"getHash\",\n            value,\n            times\n        }, (response) => {\n            if (response.error) {\n                reject(response.error);\n            } else {\n                resolve(response);\n            }\n        }));\n    }\n\n    let hashHex: string = value;\n    for (let i = 0; i < times; i++) {\n        const hashBuffer = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(hashHex).buffer);\n\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\n        hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n\n    return hashHex as T & HashedValue;\n}","/** Function that can be used to wait for a condition before returning. */\nexport async function waitFor<T>(condition: () => T, timeout = 5000, check = 100, predicate?: (obj: T) => boolean): Promise<T> {\n    return await new Promise((resolve, reject) => {\n        let interval: NodeJS.Timeout | null = null;\n\n        const intervalCheck = () => {\n            const result = condition();\n            if (predicate ? predicate(result) : result) {\n                resolve(result);\n                if (interval) clearInterval(interval);\n            }\n        };\n\n        if (timeout) {\n            setTimeout(() => {\n                clearInterval(interval!);\n                reject(`TIMEOUT waiting for ${condition?.toString()}: ${Error().stack}`);\n            }, timeout);\n\n            interval = setInterval(intervalCheck, check);\n        }\n        \n        // Run the check once first, this speeds it up a lot\n        intervalCheck();\n    });\n}\n\nexport function objectToURI<T>(url: string, data: T, includeQuestionMark: boolean): string {\n    let counter = 0;\n    for (const key in data) {\n        const seperator = (url.includes(\"?\") || counter > 0) ? \"&\" : (includeQuestionMark ? \"?\" : \"\");\n        const value = (typeof(data[key]) === \"string\") ? data[key] as unknown as string : JSON.stringify(data[key]);\n        url += seperator + encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n\n        counter++;\n    }\n\n    return url;\n}\n\nexport class PromiseTimeoutError<T> extends Error {\n    promise?: Promise<T>;\n\n    constructor(promise?: Promise<T>) {\n        super(\"Promise timed out\");\n\n        this.promise = promise;\n    }\n}\n\nexport function timeoutPomise<T>(timeout?: number): Promise<T> {\n    return new Promise((resolve, reject) => {\n        if (timeout) {\n            setTimeout(() => {\n                reject(new PromiseTimeoutError());\n            }, timeout);\n        }\n    });\n}\n\n/**\n* web-extensions\n*/\nexport function isFirefoxOrSafari(): boolean {\n    // @ts-ignore\n    return typeof(browser) !== \"undefined\";\n}\n\nlet cachedUserAgent: string;\nexport function extensionUserAgent(): string {\n    cachedUserAgent ??= `${chrome.runtime.id}/v${chrome.runtime.getManifest().version}`;\n    return cachedUserAgent;\n}\n","export function generateUserID(length = 36): string {\n    const charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let result = \"\";\n    const cryptoFuncs = typeof window === \"undefined\" ? crypto : window.crypto;\n    if (cryptoFuncs && cryptoFuncs.getRandomValues) {\n            const values = new Uint32Array(length);\n            cryptoFuncs.getRandomValues(values);\n            for (let i = 0; i < length; i++) {\n                    result += charset[values[i] % charset.length];\n            }\n            return result;\n    } else {\n            for (let i = 0; i < length; i++) {\n                result += charset[Math.floor(Math.random() * charset.length)];\n            }\n            return result;\n    }\n}\n\nexport function localizeHtmlPage(): void {\n    // Localize by replacing __MSG_***__ meta tags\n    const localizedTitle = getLocalizedMessage(document.title);\n    if (localizedTitle) document.title = localizedTitle;\n\n    const body = document.querySelector(\".sponsorBlockPageBody\");\n    const localizedMessage = getLocalizedMessage(body!.innerHTML.toString());\n    if (localizedMessage) body!.innerHTML = localizedMessage;\n}\n\nexport function getLocalizedMessage(text: string): string | false {\n    const valNewH = text.replace(/__MSG_(\\w+)__/g, function(match, v1) {\n        return v1 ? chrome.i18n.getMessage(v1).replace(/</g, \"&#60;\")\n            .replace(/\"/g, \"&quot;\").replace(/\\n/g, \"<br/>\") : \"\";\n    });\n\n    if (valNewH != text) {\n        return valNewH;\n    } else {\n        return false;\n    }\n}","import { waitFor } from \".\";\nimport { LocalStorage, ProtoConfig, SyncStorage } from \"./config\";\n\nfunction onTabUpdatedListener(tabId: number) {\n    chrome.tabs.sendMessage(tabId, {\n        message: 'update',\n    }, () => void chrome.runtime.lastError ); // Suppress error on Firefox\n}\n\nfunction onNavigationApiAvailableChange(changes: {[key: string]: chrome.storage.StorageChange}) {\n    if (changes.navigationApiAvailable) {\n        if (changes.navigationApiAvailable.newValue) {\n            chrome.tabs.onUpdated.removeListener(onTabUpdatedListener);\n        } else {\n            chrome.tabs.onUpdated.addListener(onTabUpdatedListener);\n        }\n    }\n}\n\nexport function setupTabUpdates<T extends SyncStorage, U extends LocalStorage>(config: ProtoConfig<T, U>) {\n    // If Navigation API is not supported, then background has to inform content script about video change.\n    // This happens on Safari, Firefox, and Chromium 101 (inclusive) and below.\n    chrome.tabs.onUpdated.addListener(onTabUpdatedListener);\n    void waitFor(() => config.local !== null).then(() => {\n        if (config.local!.navigationApiAvailable) {\n            chrome.tabs.onUpdated.removeListener(onTabUpdatedListener);\n        }\n    });\n\n    if (!config.configSyncListeners.includes(onNavigationApiAvailableChange)) {\n        config.configSyncListeners.push(onNavigationApiAvailableChange);\n    }\n}","import { setupTabUpdates } from \"../maze-utils/src/tab-updates\";\nimport { sendRealRequestToCustomServer, setupBackgroundRequestProxy } from \"../maze-utils/src/background-request-proxy\";\nimport { generateUserID } from \"../maze-utils/src/setup\";\nimport Config from \"./config/config\";\nimport { isSafari } from \"../maze-utils/src/config\";\nimport * as CompileConfig from \"../config.json\";\nimport { isFirefoxOrSafari } from \"../maze-utils/src\";\nimport { logError } from \"./utils/logger\";\nimport { injectUpdatedScripts } from \"../maze-utils/src/cleanup\";\nimport { freeTrialActive, getContentScripts, getFreeAccessRequestTimeLeft, getFreeTrialTimeLeft, isActivated } from \"./license/license\";\nimport { waitFor } from \"../maze-utils/src\";\nimport { chromeP } from \"../maze-utils/src/browserApi\";\n\nsetupTabUpdates(Config);\nsetupBackgroundRequestProxy();\n\nwaitFor(() => Config.isReady()).then(() => {\n    if (!Config.config!.activated && (Config.config!.alreadyActivated || Config.config!.licenseKey)) {\n        Config.config!.activated = true;\n    }\n    if (Config.config!.activated && Config.config!.userID) {\n        Config.config!.alreadyActivated = true;\n    }\n\n    if (Config.config!.userID) {\n        registerNeededContentScripts().then(() => {\n            if (!isFirefoxOrSafari()) {\n                // Chrome doesn't trigger onInstall when this happens, but they need to be\n                // re-registered to apply to incognito tabs\n                chrome.extension.isAllowedIncognitoAccess((isAllowedAccess) => {\n                    if (isAllowedAccess && !Config.config!.lastIncognitoStatus) {\n                        registerNeededContentScripts(undefined, true).catch(logError);\n                    }\n        \n                    Config.config!.lastIncognitoStatus = isAllowedAccess;\n                });\n            }\n        }).catch(logError);\n    }\n\n    setupAlarms();\n\n    // Check every time since sometimes initial onInstall isn't called\n    if (!Config.config!.userID) {\n        const setupUserID = async () => {\n            const userID = Config.config!.userID;\n    \n            // If there is no userID, then it is the first install.\n            if (!userID){\n                const groupPolicyLicenseKey = await getGroupPolicyLicenseKey();\n                const paywallEnabled = !CompileConfig[\"freeAccess\"]\n                    && !navigator.userAgent.includes(\"Mobile;\")\n                    && !navigator.userAgent.includes(\"iPhone;\")\n                    && !navigator.userAgent.includes(\"iPad;\")\n                    && await isPaywallEnabled()\n                    && !groupPolicyLicenseKey\n                    && !Config.config!.licenseKey\n                    && !Config.config!.alreadyActivated;\n                if (paywallEnabled) {\n                    Config.config!.activated = false;\n                    Config.config!.showActivatedMessage = true;\n                    Config.config!.freeActivation = false;\n                } else if (groupPolicyLicenseKey) {\n                    Config.config!.licenseKey = groupPolicyLicenseKey;\n                    Config.config!.freeActivation = false;\n                }\n\n                // Safari won't have freeActivation enabled\n                if (CompileConfig[\"freeAccess\"]) {\n                    Config.config!.freeActivation = false;\n                }\n    \n                registerNeededContentScripts().catch(logError);\n    \n                // First check for config from SponsorBlock extension\n                const sponsorBlockConfig = await Promise.race([\n                    new Promise((resolve) => setTimeout(resolve, 1000)),\n                    new Promise((resolve) => {\n                        const extensionIds = getExtensionIdsToImportFrom();\n                        \n                        for (const id of extensionIds) {\n                            chrome.runtime.sendMessage(id, { message: \"requestConfig\" }, (response) => {\n                                if (response) {\n                                    resolve(response);\n                                }\n                            });\n                        }\n                    })\n                ]);\n    \n                if (sponsorBlockConfig) {\n                    Config.config!.userID = sponsorBlockConfig[\"userID\"];\n                    Config.config!.allowExpirements = sponsorBlockConfig[\"allowExpirements\"];\n                    Config.config!.showDonationLink = sponsorBlockConfig[\"showDonationLink\"];\n                    Config.config!.showUpsells = sponsorBlockConfig[\"showUpsells\"];\n                    Config.config!.darkMode = sponsorBlockConfig[\"darkMode\"];\n                    Config.config!.importedConfig = true;\n                }\n                \n                if (!Config.config!.userID) {\n                    const newUserID = generateUserID();\n                    Config.config!.userID = newUserID;\n                    Config.config!.showInfoAboutCasualMode = false;\n                }\n    \n                Config.config!.showInfoAboutRandomThumbnails = true;\n    \n                if (paywallEnabled) {\n                    setTimeout(() => void chrome.tabs.create({url: chrome.runtime.getURL(\"/payment.html\")}), 100);\n                } else if (!groupPolicyLicenseKey) {\n                    setTimeout(() => void chrome.tabs.create({url: chrome.runtime.getURL(\"/help.html\")}), 100);\n                }\n            }\n        };\n    \n        if (isFirefoxOrSafari() && !isSafari()) {\n            // This let's the config sync to run fully before checking.\n            // This is required on Firefox\n            setTimeout(() => void setupUserID(), 1500);\n        } else {\n            waitFor(() => Config.isReady()).then(() => setupUserID()).catch(logError);\n        }\n    }\n}).catch(logError);\n\nasync function isPaywallEnabled(): Promise<boolean> {\n    try {\n        const result = await sendRealRequestToCustomServer(\"GET\", `${Config.config!.serverAddress}/api/featureFlag/deArrowPaywall`);\n\n        if (result.ok) {\n            const json = await result.json();\n\n            return json.enabled;\n        }\n    } catch (e) {\n        logError(\"Caught error while checking feature flags\", e);\n    }\n\n    return false;\n}\n\nasync function getGroupPolicyLicenseKey(): Promise<string | null> {\n    try {\n        if (\"managed\" in chrome.storage) {\n            const result = await chrome.storage.managed.get(\"licenseKey\");\n            return result?.licenseKey || null;\n        }\n    } catch (e) {\n        // Managed storage not available on this browser\n    }\n\n    return null;\n}\n\nconst existingRegistrations: { id: string; script: browser.contentScripts.RegisteredContentScript }[] = [];\n\nchrome.runtime.onMessage.addListener((request, _, sendResponse) =>  {\n    switch(request.message) {\n        case \"openConfig\":\n            void chrome.tabs.create({url: chrome.runtime.getURL('options/options.html' + (request.hash ? '#' + request.hash : ''))});\n            return false;\n        case \"openHelp\":\n            void chrome.tabs.create({url: chrome.runtime.getURL('help.html')});\n            return false;\n        case \"openPayment\":\n            void chrome.tabs.create({url: chrome.runtime.getURL('payment.html')});\n            return false;\n        case \"registerNeededContentScripts\":\n            registerNeededContentScripts(request.activated).then(sendResponse).catch(sendResponse);\n            setupAlarms();\n            return true;\n        case \"setupAlarms\":\n            setupAlarms();\n            return false;\n    }\n\n    return false;\n});\n\nchrome.alarms.onAlarm.addListener((alarm) => {\n    switch (alarm.name) {\n        case \"freeTrial\": {\n            onFreeTrialComplete();\n            break;\n        }\n        case \"freeAccessRequest\":\n            onFreeAccessRequestComplete();\n            break;\n    }\n});\n\nfunction onFreeTrialComplete() {\n    if (!freeTrialActive() && !isActivated()) {\n        Config.config!.freeTrialEnded = true;\n\n        void chrome.tabs.create({url: chrome.runtime.getURL('payment.html')});\n\n        registerNeededContentScripts().catch(logError);\n    }\n}\n\nfunction onFreeAccessRequestComplete() {\n    if (Config.config!.activated) return;\n\n    Config.config!.freeActivation = true;\n    Config.config!.activated = true;\n    Config.config!.freeTrialEnded = true;\n\n    registerNeededContentScripts().catch(logError);\n\n    setTimeout(() => void chrome.tabs.create({url: chrome.runtime.getURL('help.html')}), 1000);\n}\n\nfunction getExtensionIdsToImportFrom(): string[] {\n    if (isSafari()) {\n        return CompileConfig.extensionImportList.safari;\n    } else if (isFirefoxOrSafari()) {\n        return CompileConfig.extensionImportList.firefox;\n    } else {\n        return CompileConfig.extensionImportList.chromium;\n    }\n}\n\nchrome.runtime.onMessageExternal.addListener((request, sender, callback) => {\n    if (sender.id && getExtensionIdsToImportFrom().includes(sender.id)) {\n        if (request.message === \"isInstalled\") {\n            callback(true);\n        }\n    }\n});\n\nasync function registerNeededContentScripts(activated?: boolean, forceUpdate?: boolean) {\n    if (isSafari()) return;\n\n    const contentScripts = getContentScripts(activated);\n    if (\"scripting\" in chrome && \"getRegisteredContentScripts\" in chrome.scripting \n            && isPersistentContentScriptSupported()) {\n        Config.config!.firefoxOldContentScriptRegistration = false;\n\n        const existingRegistration = await chromeP.scripting.getRegisteredContentScripts();\n        if (existingRegistration?.length > 0) {\n            const registrationsToRemove = existingRegistration\n                .filter((script) => forceUpdate || !contentScripts.some((newScript) => newScript.id === script.id));\n\n            if (registrationsToRemove.length > 0) {\n                await chromeP.scripting.unregisterContentScripts({\n                    ids: registrationsToRemove.map((script) => script.id),\n                });\n            }\n        }\n\n        let scriptsChanged = false;\n        for (const script of contentScripts) {\n            if (forceUpdate || !existingRegistration || !existingRegistration.some((existing) => existing.id === script.id)) {\n                await chromeP.scripting.registerContentScripts([{\n                    id: script.id,\n                    runAt: script.runAt,\n                    matches: script.matches,\n                    allFrames: script.allFrames,\n                    js: script.js,\n                    css: script.css,\n                    persistAcrossSessions: true,\n                }]);\n\n                scriptsChanged = true;\n            }\n        }\n\n        if (scriptsChanged) {\n            await injectUpdatedScripts(contentScripts);\n        }\n    } else {\n        Config.config!.firefoxOldContentScriptRegistration = true;\n        \n        if (existingRegistrations.length > 0) {\n            const registrationsToRemove = existingRegistrations\n                .filter((script) => forceUpdate || !contentScripts.some((newScript) => newScript.id === script.id));\n\n            for (const registration of registrationsToRemove) {\n                await registration.script.unregister();\n                existingRegistrations.splice(existingRegistrations.indexOf(registration), 1);\n            }\n        }\n\n        let scriptsChanged = false;\n        for (const script of contentScripts) {\n            if (forceUpdate || !existingRegistrations.some((existing) => existing.id === script.id)) {\n                existingRegistrations.push({\n                    id: script.id,\n                    script: await browser.contentScripts.register({\n                        runAt: script.runAt,\n                        matches: script.matches,\n                        allFrames: script.allFrames,\n                        js: script.js?.map?.(js => ({file: js})),\n                        css: script.css?.map?.(css => ({file: css})),\n                    })\n                });\n\n                scriptsChanged = true;\n            }\n        }\n\n        if (scriptsChanged) {\n            await injectUpdatedScripts(contentScripts);\n        }\n    }\n}\n\nfunction isPersistentContentScriptSupported() {\n    if (!isFirefoxOrSafari() || isSafari()) return true;\n\n    const userAgentVersion = parseInt(navigator.userAgent.match(/Firefox\\/(\\S+)/)?.[1] ?? \"\");\n    return !isNaN(userAgentVersion) && userAgentVersion > 105;\n}\n\nfunction setupAlarms() {\n    if (!Config.config!.activated) {\n        const freeTrialTimeLeft = getFreeTrialTimeLeft();\n        if (freeTrialTimeLeft && freeTrialTimeLeft > 0) {\n            void chrome.alarms.create(\"freeTrial\", { when: Date.now() + freeTrialTimeLeft + 1000 * 60 });\n        } else if (freeTrialTimeLeft && !Config.config!.freeTrialEnded) {\n            onFreeTrialComplete();\n        }\n\n        const freeAccessRequestTimeLeft = getFreeAccessRequestTimeLeft();\n        if (freeAccessRequestTimeLeft && freeAccessRequestTimeLeft > 0) {\n            void chrome.alarms.create(\"freeAccessRequest\", { when: Date.now() + freeAccessRequestTimeLeft });\n        } else if (freeAccessRequestTimeLeft) {\n            onFreeAccessRequestComplete();\n        }\n    }\n}\n","import { Keybind, ProtoConfig } from \"../../maze-utils/src/config\";\nimport { VideoID } from \"../../maze-utils/src/video\";\nimport { ThumbnailSubmission } from \"../thumbnails/thumbnailData\";\nimport { logError } from \"../utils/logger\";\nimport * as CompileConfig from \"../../config.json\";\nimport { casualVoteCategories } from \"../submission/casualVote.const\";\n\nexport interface Permission {\n    canSubmit: boolean;\n}\n\nexport type UnsubmittedThumbnailSubmission = ThumbnailSubmission & {\n    selected?: boolean;\n}\n\nexport interface UnsubmittedTitleSubmission {\n    title: string;\n    selected?: boolean;\n}\n\nexport interface UnsubmittedSubmission {\n    thumbnails: UnsubmittedThumbnailSubmission[];\n    titles: UnsubmittedTitleSubmission[];\n    casual?: boolean;\n}\n\nexport enum TitleFormatting {\n    Disable = -1,\n    CapitalizeWords,\n    TitleCase,\n    SentenceCase,\n    LowerCase,\n    FirstLetterUppercase\n}\n\nexport enum ThumbnailCacheOption {\n    Disable,\n    OnAllPagesExceptWatch,\n    OnAllPages\n}\n\nexport enum ThumbnailFallbackOption {\n    RandomTime,\n    Blank,\n    Original,\n    AutoGenerated\n}\n\nexport enum ThumbnailFallbackAutogeneratedOption {\n    Start,\n    Middle,\n    End\n}\n\nexport type ConfigurationID = string & { __configurationID: never };\n\nexport interface CustomConfiguration {\n    name: string;\n    replaceTitles: boolean | null;\n    replaceThumbnails: boolean | null;\n    defaultToCustom: boolean | null;\n    useCrowdsourcedTitles: boolean | null;\n    titleFormatting: TitleFormatting | null;\n    shouldCleanEmojis: boolean | null;\n    thumbnailFallback: ThumbnailFallbackOption | null;\n    thumbnailFallbackAutogenerated: ThumbnailFallbackAutogeneratedOption | null;\n}\n\nconst isEnglish = typeof chrome !== \"object\" || chrome.i18n.getUILanguage().startsWith(\"en\");\n\ninterface SBConfig {\n    userID: string | null;\n    vip: boolean;\n    actAsVip: boolean;\n    allowExpirements: boolean;\n    showDonationLink: boolean;\n    showUpsells: boolean;\n    donateClicked: number;\n    darkMode: boolean;\n    invidiousInstances: string[];\n    keepUnsubmitted: boolean;\n    keepUnsubmittedInPrivate: boolean;\n    thumbnailSaturationLevel: number;\n    titleFormatting: TitleFormatting;\n    formatCustomTitles: boolean;\n    formatOriginalTitles: boolean;\n    shouldCleanEmojis: boolean;\n    onlyTitleCaseInEnglish: boolean;\n    serverAddress: string;\n    thumbnailServerAddress: string;\n    fetchTimeout: number;\n    startLocalRenderTimeout: number;\n    renderTimeout: number;\n    thumbnailCacheUse: ThumbnailCacheOption;\n    showGuidelineHelp: boolean;\n    thumbnailFallback: ThumbnailFallbackOption;\n    thumbnailFallbackAutogenerated: ThumbnailFallbackAutogeneratedOption;\n    showLiveCover: boolean;\n    extensionEnabled: boolean;\n    defaultToCustom: boolean;\n    alwaysShowShowOriginalButton: boolean;\n    showOriginalOnHover: boolean;\n    showOriginalOnHoverOfVideo: boolean;\n    showCustomOnHoverIfCasual: boolean;\n    importedConfig: boolean;\n    replaceTitles: boolean;\n    replaceThumbnails: boolean;\n    useCrowdsourcedTitles: boolean;\n    titleMaxLines: number;\n    casualMode: boolean;\n    casualModeSettings: Record<string, number>;\n    showOriginalThumbWhenCasual: boolean;\n    onlyShowCasualIconForCustom: boolean;\n    formatCasualTitles: boolean;\n    channelOverrides: Record<string, ConfigurationID>;\n    customConfigurations: Record<ConfigurationID, CustomConfiguration>;\n    showInfoAboutRandomThumbnails: boolean;\n    showInfoAboutCasualMode: boolean;\n    showIconForFormattedTitles: boolean;\n    countReplacements: boolean;\n    titleReplacements: number;\n    thumbnailReplacements: number;\n    ignoreAbThumbnails: boolean;\n    ignoreTranslatedTitles: boolean;\n    hideDetailsWhileFetching: boolean;\n    firstThumbnailSubmitted: boolean;\n    licenseKey: string | null;\n    activated: boolean;\n    alreadyActivated: boolean;\n    freeActivation: boolean;\n    freeTrialStart: number | null;\n    freeTrialEnded: boolean;\n    freeAccessRequestStart: number | null;\n    freeTrialDuration: number;\n    freeAccessWaitingPeriod: number;\n    firefoxOldContentScriptRegistration: boolean;\n    lastIncognitoStatus: boolean;\n    showActivatedMessage: boolean;\n    confirmGuidelinesCount: number;\n    lastGuidelinesConfirmation: number;\n    openMenuKey: Keybind;\n    enableExtensionKey: Keybind;\n}\n\ninterface SBStorage {\n    navigationApiAvailable: boolean;\n    unsubmitted: Record<VideoID, UnsubmittedSubmission>;\n}\n\nclass ConfigClass extends ProtoConfig<SBConfig, SBStorage> {\n    resetToDefault() {\n        chrome.storage.sync.set({\n            ...this.syncDefaults,\n            userID: this.config!.userID,\n            licenseKey: this.config!.licenseKey,\n            freeActivation: this.config!.freeActivation,\n            activated: this.config!.activated,\n            freeTrialStart: this.config!.freeTrialStart,\n            freeTrialEnded: this.config!.freeTrialEnded,\n            freeAccessRequestStart: this.config!.freeAccessRequestStart,\n            firefoxOldContentScriptRegistration: this.config!.firefoxOldContentScriptRegistration\n        }).catch(logError);\n\n        chrome.storage.local.set({\n            ...this.localDefaults,\n        }).catch(logError);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\nfunction migrateOldSyncFormats(config: SBConfig) {\n    if (config[\"onlyFormatCustomTitles\"]) {\n        config.formatCustomTitles = true;\n        config.formatOriginalTitles = false;\n\n        chrome.storage.sync.remove(\"onlyFormatCustomTitles\").catch(logError);\n    }\n}\n\nconst syncDefaults = {\n    userID: null,\n    vip: false,\n    actAsVip: true,\n    allowExpirements: true,\n    showDonationLink: true,\n    showUpsells: true,\n    donateClicked: 0,\n    darkMode: true,\n    invidiousInstances: [],\n    keepUnsubmitted: true,\n    keepUnsubmittedInPrivate: false,\n    thumbnailSaturationLevel: 100,\n    titleFormatting: isEnglish ? TitleFormatting.TitleCase : TitleFormatting.Disable,\n    formatCustomTitles: true,\n    formatOriginalTitles: true,\n    shouldCleanEmojis: true,\n    onlyTitleCaseInEnglish: false,\n    serverAddress: CompileConfig.serverAddress,\n    thumbnailServerAddress: CompileConfig.thumbnailServerAddress,\n    fetchTimeout: 7000,\n    startLocalRenderTimeout: 2000,\n    renderTimeout: 25000,\n    thumbnailCacheUse: ThumbnailCacheOption.OnAllPages,\n    showGuidelineHelp: true,\n    thumbnailFallback: ThumbnailFallbackOption.RandomTime,\n    thumbnailFallbackAutogenerated: ThumbnailFallbackAutogeneratedOption.Start,\n    showLiveCover: true,\n    extensionEnabled: true,\n    defaultToCustom: true,\n    alwaysShowShowOriginalButton: false,\n    showOriginalOnHover: false,\n    showOriginalOnHoverOfVideo: false,\n    showCustomOnHoverIfCasual: false,\n    importedConfig: false,\n    replaceTitles: true,\n    replaceThumbnails: true,\n    useCrowdsourcedTitles: true,\n    titleMaxLines: 3,\n    casualMode: false,\n    casualModeSettings: casualVoteCategories.reduce((acc, { id }) => { acc[id] = 1; return acc; }, {}),\n    showOriginalThumbWhenCasual: false,\n    onlyShowCasualIconForCustom: false,\n    formatCasualTitles: true,\n    channelOverrides: {},\n    customConfigurations: {},\n    showInfoAboutRandomThumbnails: false,\n    showInfoAboutCasualMode: true,\n    showIconForFormattedTitles: true,\n    countReplacements: true,\n    titleReplacements: 0,\n    thumbnailReplacements: 0,\n    ignoreAbThumbnails: true,\n    ignoreTranslatedTitles: false,\n    hideDetailsWhileFetching: true,\n    firstThumbnailSubmitted: false,\n    licenseKey: null,\n    activated: true,\n    alreadyActivated: false,\n    freeActivation: true,\n    freeTrialStart: null,\n    freeTrialEnded: false,\n    freeAccessRequestStart: null,\n    freeTrialDuration: 1000 * 60 * 60 * 6,\n    freeAccessWaitingPeriod: 1000 * 60 * 60 * 24 * 3,\n    firefoxOldContentScriptRegistration: false,\n    lastIncognitoStatus: false,\n    showActivatedMessage: false,\n    confirmGuidelinesCount: 0,\n    lastGuidelinesConfirmation: 0,\n    openMenuKey: { key: \"d\", shift: true },\n    enableExtensionKey: { key: \"e\", ctrl: true, shift: true, alt: true }\n};\n\nconst localDefaults = {\n    navigationApiAvailable: false,\n    unsubmitted: {}\n};\n\nconst Config = new ConfigClass(syncDefaults, localDefaults, migrateOldSyncFormats, true);\nexport default Config;\n","import { sendRequestToServer } from \"../utils/requests\";\nimport Config from \"../config/config\";\nimport { FetchResponse } from \"../../maze-utils/src/background-request-proxy\";\nimport { logError } from \"../utils/logger\";\n\nexport function isActivated() {\n    return Config.config!.activated \n        || freeTrialActive();\n}\n\nexport function freeTrialActive() {\n    const timeLeft = getFreeTrialTimeLeft();\n    return timeLeft !== null && timeLeft > 0 && !Config.config!.freeTrialEnded;\n}\n\nexport function getFreeTrialTimeLeft() {\n    return Config.config!.freeTrialStart !== null ? Config.config!.freeTrialDuration - (Date.now() - Config.config!.freeTrialStart) : null;\n}\n\nexport function isFreeAccessRequestActive() {\n    const timeLeft = getFreeAccessRequestTimeLeft();\n    return timeLeft !== null && timeLeft > 0;\n}\n\nexport function getFreeAccessRequestTimeLeft() {\n    return Config.config!.freeAccessRequestStart !== null ? Config.config!.freeAccessWaitingPeriod - (Date.now() - Config.config!.freeAccessRequestStart) : null;\n}\n\nexport async function getLicenseKey(): Promise<string | null> {\n    if (Config.config!.licenseKey !== null) {\n        return Config.config!.licenseKey;\n    } else if (Config.config!.freeActivation && Config.config!.userID) {\n        const licenseKey = await generateLicenseKey(\"free\");\n        Config.config!.licenseKey = licenseKey;\n\n        return licenseKey;\n    }\n\n    return null;\n}\n\nasync function generateLicenseKey(type: \"free\") {\n    let result: FetchResponse\n    try {\n        result = await sendRequestToServer(\"GET\", `/api/generateToken/${type}`, {\n            key: Date.now()\n        });\n    } catch (e) {\n        logError(\"Caught an error while requesting to generate a license key\", e);\n        return null;\n    }\n\n    if (result.status === 200) {\n        const json = JSON.parse(result.responseText);\n\n        return json.licenseKey ?? null;\n    }\n\n    return null;\n}\n\nexport interface CustomContentScript {\n    id: string;\n    runAt: \"document_start\" | \"document_end\" | \"document_idle\";\n    matches: string[];\n    allFrames: boolean;\n    js?: string[];\n    css?: string[];\n}\n\nexport function getContentScripts(activated?: boolean): CustomContentScript[] {\n    activated ??= isActivated();\n\n    if (activated) {\n        return [{\n            id: \"content\",\n            runAt: \"document_start\",\n            matches: [\n                \"https://*.youtube.com/*\",\n                \"https://www.youtube-nocookie.com/embed/*\"\n            ],\n            allFrames: true,\n            js: [\n                \"./js/content.js\"\n            ],\n            css: [\n                \"content.css\",\n                \"shared.css\"\n            ]\n        }];\n    } else {\n        return [{\n            id: \"unactivatedWarning\",\n            runAt: \"document_start\",\n            matches: [\n                \"https://*.youtube.com/*\",\n                \"https://www.youtube-nocookie.com/embed/*\"\n            ],\n            allFrames: true,\n            js: [\n                \"./js/unactivatedWarning.js\"\n            ]\n        }];\n    }\n}\n\nexport function askBackgroundToRegisterNeededContentScripts(activated: boolean): Promise<void> {\n    return new Promise((resolve) => chrome.runtime.sendMessage({\n        message: \"registerNeededContentScripts\",\n        activated\n    }, resolve));\n}\n\nexport function askBackgroundToSetupAlarms(): Promise<void> {\n    return new Promise((resolve) => chrome.runtime.sendMessage({\n        message: \"setupAlarms\",\n    }, resolve));\n}\n","export interface CasualVoteCategory {\n    id: string;\n    key: string;\n}\n\nexport const casualVoteCategories: CasualVoteCategory[] = [{\n    id: \"funny\",\n    key: \"dearrow_category_funny\"\n}, {\n    id: \"creative\",\n    key: \"dearrow_category_creative\"\n}, {\n    id: \"clever\",\n    key: \"dearrow_category_clever\"\n}, {\n    id: \"descriptive\",\n    key: \"dearrow_category_descriptive\"\n}, {\n    id: \"other\",\n    key: \"dearrow_category_other\"\n}];\n\nexport const casualWikiLink = \"https://wiki.sponsor.ajay.app/w/DeArrow/Casual_mode\";","import * as CompileConfig from \"../../config.json\";\n\nexport function logError(...vals: unknown[]): void {\n    console.error(\"[CB]\", ...vals);\n}\n\nexport function log(...text: unknown[]): void {\n    if (CompileConfig.debug) {\n        console.log(...text);\n    } else {\n        window[\"CBLogs\"] ??= [];\n        window[\"CBLogs\"].push({\n            time: Date.now(),\n            text\n        });\n\n        if (window[\"CBLogs\"].length > 100) {\n            window[\"CBLogs\"].shift();\n        }\n    }\n}\n","import { FetchResponse, sendRequestToCustomServer } from \"../../maze-utils/src/background-request-proxy\";\nimport Config from \"../config/config\";\n\n\nexport function sendRequestToServer(type: string, url: string, data = {}): Promise<FetchResponse> {\n    return sendRequestToCustomServer(type, Config.config!.serverAddress + url, data);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(1398);\n"],"names":["sendRealRequestToCustomServer","type","url","data","headers","toLowerCase","objectToURI","fetch","method","redirect","body","JSON","stringify","isSerializable","value","window","structuredClone","serializeOrStringify","toString","String","chrome","runtime","onMessage","addListener","request","sender","callback","message","then","response","buffer","binary","isFirefoxOrSafari","isSafari","blob","Array","from","Uint8Array","arrayBuffer","responseText","text","responseBinary","returnHeaders","entries","reduce","acc","key","status","ok","catch","error","console","getHash","times","e","Promise","resolve","reject","sendMessage","prefix","requestDescription","isBodyGarbage","warn","chromeP","browser","cleanupListeners","getCleanupId","id","listener","push","source","started","performance","now","postMessage","addEventListener","extraScripts","ignoreNormalScipts","scripts","concat","getManifest","content_scripts","cs","tab","tabs","query","matches","css","length","scripting","insertCSS","target","tabId","files","executeScript","js","world","windows","getAll","populate","script","some","match","replace","file","navigator","vendor","formatKey","toUpperCase","constructor","syncDefaults","localDefaults","migrateOldSyncFormats","inDeArrow","configLocalListeners","configSyncListeners","cachedSyncConfig","cachedLocalStorage","config","local","this","setupConfig","result","sync","configProxy","storage","onChanged","changes","areaName","newValue","lastSet","nextToUpdate","Set","activeTimeout","self","syncHandler","set","obj","prop","Date","add","delayUpdate","items","clear","map","v","k","setTimeout","get","deleteProperty","remove","localHandler","Proxy","handler","forceSyncUpdate","forceLocalUpdate","lastError","alert","i18n","getMessage","fetchConfig","all","undefined","location","href","includes","addDefaults","Object","prototype","hasOwnProperty","call","key2","isReady","first","second","Boolean","alt","ctrl","shift","code","keybind","ret","formatted","fragments","exec","parseInt","parseFloat","seconds","precise","Math","max","hours","floor","minutes","minutesDisplay","secondsNum","secondsDisplay","toFixed","isNaN","statusCode","errorMessage","introString","postFix","crypto","hashHex","i","hashBuffer","subtle","digest","TextEncoder","encode","b","padStart","join","condition","timeout","check","predicate","interval","intervalCheck","clearInterval","Error","stack","setInterval","includeQuestionMark","counter","seperator","encodeURIComponent","PromiseTimeoutError","promise","super","cachedUserAgent","version","getLocalizedMessage","valNewH","v1","charset","cryptoFuncs","getRandomValues","values","Uint32Array","random","localizedTitle","document","title","querySelector","localizedMessage","innerHTML","onTabUpdatedListener","onNavigationApiAvailableChange","navigationApiAvailable","onUpdated","removeListener","waitFor","setupTabUpdates","setupBackgroundRequestProxy","activated","alreadyActivated","licenseKey","userID","registerNeededContentScripts","extension","isAllowedIncognitoAccess","isAllowedAccess","lastIncognitoStatus","logError","setupAlarms","setupUserID","groupPolicyLicenseKey","managed","getGroupPolicyLicenseKey","paywallEnabled","CompileConfig","userAgent","serverAddress","json","enabled","isPaywallEnabled","showActivatedMessage","freeActivation","sponsorBlockConfig","race","extensionIds","getExtensionIdsToImportFrom","allowExpirements","showDonationLink","showUpsells","darkMode","importedConfig","newUserID","generateUserID","showInfoAboutCasualMode","showInfoAboutRandomThumbnails","create","getURL","existingRegistrations","onFreeTrialComplete","freeTrialActive","isActivated","freeTrialEnded","onFreeAccessRequestComplete","extensionImportList","safari","firefox","chromium","forceUpdate","contentScripts","getContentScripts","userAgentVersion","isPersistentContentScriptSupported","firefoxOldContentScriptRegistration","existingRegistration","getRegisteredContentScripts","registrationsToRemove","filter","newScript","unregisterContentScripts","ids","scriptsChanged","existing","registerContentScripts","runAt","allFrames","persistAcrossSessions","injectUpdatedScripts","registration","unregister","splice","indexOf","register","freeTrialTimeLeft","getFreeTrialTimeLeft","alarms","when","freeAccessRequestTimeLeft","getFreeAccessRequestTimeLeft","_","sendResponse","hash","onAlarm","alarm","name","onMessageExternal","TitleFormatting","ThumbnailCacheOption","ThumbnailFallbackOption","ThumbnailFallbackAutogeneratedOption","isEnglish","getUILanguage","startsWith","ConfigClass","ProtoConfig","resetToDefault","freeTrialStart","freeAccessRequestStart","Config","vip","actAsVip","donateClicked","invidiousInstances","keepUnsubmitted","keepUnsubmittedInPrivate","thumbnailSaturationLevel","titleFormatting","TitleCase","Disable","formatCustomTitles","formatOriginalTitles","shouldCleanEmojis","onlyTitleCaseInEnglish","thumbnailServerAddress","fetchTimeout","startLocalRenderTimeout","renderTimeout","thumbnailCacheUse","OnAllPages","showGuidelineHelp","thumbnailFallback","RandomTime","thumbnailFallbackAutogenerated","Start","showLiveCover","extensionEnabled","defaultToCustom","alwaysShowShowOriginalButton","showOriginalOnHover","showOriginalOnHoverOfVideo","showCustomOnHoverIfCasual","replaceTitles","replaceThumbnails","useCrowdsourcedTitles","titleMaxLines","casualMode","casualModeSettings","casualVoteCategories","showOriginalThumbWhenCasual","onlyShowCasualIconForCustom","formatCasualTitles","channelOverrides","customConfigurations","showIconForFormattedTitles","countReplacements","titleReplacements","thumbnailReplacements","ignoreAbThumbnails","ignoreTranslatedTitles","hideDetailsWhileFetching","firstThumbnailSubmitted","freeTrialDuration","freeAccessWaitingPeriod","confirmGuidelinesCount","lastGuidelinesConfirmation","openMenuKey","enableExtensionKey","unsubmitted","timeLeft","sendRequestToServer","parse","generateLicenseKey","casualWikiLink","vals","debug","log","time","sendRequestToCustomServer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"sourceRoot":""}